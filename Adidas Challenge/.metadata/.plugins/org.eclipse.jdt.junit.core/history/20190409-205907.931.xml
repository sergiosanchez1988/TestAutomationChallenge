<?xml version="1.0" encoding="UTF-8"?><testrun name="TestRunner (1)" project="SeleniumTA" tests="4" started="2" failures="1" errors="1" ignored="0">
  <testsuite name="WikiTestRUnner.TestRunner" incomplete="true" displayname="TestRunner" uniqueid="[engine:junit-vintage]/[runner:WikiTestRUnner.TestRunner]">
    <testcase name="WikiTestRUnner.TestRunner" classname="WikiTestRUnner.TestRunner" incomplete="true" displayname="initializationError" uniqueid="[engine:junit-vintage]/[runner:WikiTestRUnner.TestRunner]/[test:initializationError(WikiTestRUnner.TestRunner)%5B0%5D]"/>
    <testcase name="WikiTestRUnner.TestRunner" classname="WikiTestRUnner.TestRunner" incomplete="true" displayname="initializationError" uniqueid="[engine:junit-vintage]/[runner:WikiTestRUnner.TestRunner]/[test:initializationError(WikiTestRUnner.TestRunner)%5B1%5D]"/>
  </testsuite>
  <testsuite name="Unrooted Tests" time="0.002" displayname="Unrooted Tests">
    <testcase name="WikiTestRUnner.TestRunner" classname="WikiTestRUnner.TestRunner" time="0.002" dynamicTest="true" displayname="initializationError" uniqueid="[engine:junit-vintage]/[runner:WikiTestRUnner.TestRunner]/[dynamic:initializationError(WikiTestRUnner.TestRunner)]">
      <error>java.lang.Exception: Method main() should not be static&#13;
	at org.junit.runners.model.FrameworkMethod.validatePublicVoid(FrameworkMethod.java:93)&#13;
	at org.junit.runners.model.FrameworkMethod.validatePublicVoidNoArg(FrameworkMethod.java:74)&#13;
	at org.junit.runners.ParentRunner.validatePublicVoidNoArgMethods(ParentRunner.java:155)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.validateTestMethods(BlockJUnit4ClassRunner.java:208)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.validateInstanceMethods(BlockJUnit4ClassRunner.java:188)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.collectInitializationErrors(BlockJUnit4ClassRunner.java:128)&#13;
	at org.junit.runners.ParentRunner.validate(ParentRunner.java:416)&#13;
	at org.junit.runners.ParentRunner.&lt;init&gt;(ParentRunner.java:84)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.&lt;init&gt;(BlockJUnit4ClassRunner.java:65)&#13;
	at org.junit.internal.builders.JUnit4Builder.runnerForClass(JUnit4Builder.java:10)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder$DefensiveJUnit4Builder.runnerForClass(DefensiveAllDefaultPossibilitiesBuilder.java:128)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder.runnerForClass(DefensiveAllDefaultPossibilitiesBuilder.java:56)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.vintage.engine.discovery.TestClassRequestResolver.createRunnerTestDescriptor(TestClassRequestResolver.java:55)&#13;
	at org.junit.vintage.engine.discovery.VintageDiscoverer.lambda$discover$0(VintageDiscoverer.java:53)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)&#13;
	at java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.vintage.engine.discovery.VintageDiscoverer.discover(VintageDiscoverer.java:55)&#13;
	at org.junit.vintage.engine.VintageTestEngine.discover(VintageTestEngine.java:62)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discoverEngineRoot(DefaultLauncher.java:177)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discoverRoot(DefaultLauncher.java:164)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discover(DefaultLauncher.java:120)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.&lt;init&gt;(JUnit5TestReference.java:45)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.createUnfilteredTest(JUnit5TestLoader.java:76)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.createTest(JUnit5TestLoader.java:66)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.loadTests(JUnit5TestLoader.java:53)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:525)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
&#13;
</error>
    </testcase>
    <testcase name="WikiTestRUnner.TestRunner" classname="WikiTestRUnner.TestRunner" time="0.001" dynamicTest="true" displayname="initializationError" uniqueid="[engine:junit-vintage]/[runner:WikiTestRUnner.TestRunner]/[dynamic:initializationError(WikiTestRUnner.TestRunner)]">
      <failure>org.opentest4j.MultipleFailuresError: Multiple Failures (2 failures)&#13;
	Method main() should not be static&#13;
	Method main should have no parameters&#13;
	at org.junit.vintage.engine.execution.TestRun.getStoredResultOrSuccessful(TestRun.java:166)&#13;
	at org.junit.vintage.engine.execution.RunListenerAdapter.fireExecutionFinished(RunListenerAdapter.java:202)&#13;
	at org.junit.vintage.engine.execution.RunListenerAdapter.testFinished(RunListenerAdapter.java:160)&#13;
	at org.junit.vintage.engine.execution.RunListenerAdapter.testFinished(RunListenerAdapter.java:76)&#13;
	at org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:56)&#13;
	at org.junit.runner.notification.RunNotifier$7.notifyListener(RunNotifier.java:190)&#13;
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)&#13;
	at org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:187)&#13;
	at org.junit.internal.runners.ErrorReportingRunner.runCause(ErrorReportingRunner.java:66)&#13;
	at org.junit.internal.runners.ErrorReportingRunner.run(ErrorReportingRunner.java:38)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)&#13;
	at java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)&#13;
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:137)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
